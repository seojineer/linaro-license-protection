---
- name: Create base directory for installation
  file: path={{ install_base }}/{{ hostname }}
        owner={{ apache_user }}
        group={{ apache_user }}
        mode=0755
        state=directory
  tags:
    - install
    - update

- name: Checkout linaro-license-protection code
  git:  repo={{ git_repo }}
        dest={{ install_base }}/{{ hostname }}/{{ app_name }}
        version={{ git_tag }}
        update=yes
  notify: restart-apache
  tags:
    - install
    - update

- name: Checkout linaro-license-protection-configs
  git:  repo={{ git_repo_config }}
        dest={{ install_base }}/{{ hostname }}/configs
        version={{ git_tag }}
        update=yes
  tags:
    - install
    - update

- name: Create db/ directory
  file: path={{ install_base }}/{{ hostname }}/db
        state=directory
        owner={{ apache_user }}
        group={{ apache_user }}
        mode=755
        recurse=yes
  tags:
    - install
    - update

- name: Run syncdb command
  django_manage:  app_path="{{ install_base }}/{{ hostname }}/{{ app_name }}"
                  pythonpath="{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
                  settings="{{ django_settings }}"
                  command=syncdb
  environment:
    PYTHONPATH: "{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
    DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
  tags:
    - install
    - update
    - django

# the app was originally deployed without support for south migrations
# this checks if we need to set up a fake migration to get things going
- name: Run fake migration if needed
  shell: ./manage.py migrate license_protected_downloads 0001 --fake --settings={{ django_settings }} && touch "{{ install_base }}/{{ hostname }}/db/.south-setup"
  args:
    chdir: "{{ install_base }}/{{ hostname }}/{{ app_name }}"
    creates: "{{ install_base }}/{{ hostname }}/db/.south-setup"
  environment:
    PYTHONPATH: "{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:{{ install_base }}/{{ hostname }}/configs/django"
  tags:
    - update
    - django

- name: Run south DB migration command
  django_manage:  app_path="{{ install_base }}/{{ hostname }}/{{ app_name }}"
                  pythonpath="{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
                  settings="{{ django_settings }}"
                  command=migrate
  environment:
    PYTHONPATH: "{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
    DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
  tags:
    - install
    - update
    - django

- name: Run collectstatic command
  django_manage:  app_path="{{ install_base }}/{{ hostname }}/{{ app_name }}"
                  pythonpath="{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
                  settings="{{ django_settings }}"
                  command=collectstatic
  environment:
    PYTHONPATH: "{{ install_base }}/{{ hostname }}:{{ install_base }}/{{ hostname }}/{{ app_name }}:/{{ install_base }}/{{ hostname }}/configs/django"
    DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
  tags:
    - install
    - update
    - django

- name: Fix directory permissions
  file: path={{ install_base }}/{{ hostname }}/{{ app_name }}
        owner={{ apache_user }}
        group={{ apache_user }}
        state=directory
        recurse=yes
  tags:
    - install
    - update

- name: Fix configs directory permissions
  file: path={{ install_base }}/{{ hostname }}/configs
        owner={{ apache_user }}
        group={{ apache_user }}
        recurse=yes
        state=directory
  tags:
    - install
    - update
